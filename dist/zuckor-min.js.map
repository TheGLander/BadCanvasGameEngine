{"version":3,"file":"zuckor-min.js","sources":["../src/functions/old/getPoints.js","../src/functions/rad.js","../src/functions/loadImg.js","../src/functions/drawRotatedImage.js","../src/classes/sprite.js","../src/index.js","../src/renders/image.js","../src/renders/rect.js","../src/renders/circle.js","../src/classes/stage.js"],"sourcesContent":["\r\n/**\r\n * Gets the sprite's points\r\n *\r\n * @param sprite the sprite to get the point to.\r\n * @return the sprites points.\r\n */\r\nexport default function getPoints(sprite) {\r\n    function getRotatedX(x, y, degree) {\r\n        degree = degree * (Math.PI / 180)\r\n        return (x * Math.cos(degree)) - (y * Math.sin(degree))\r\n    }\r\n\r\n    function getRotatedY(x, y, degree) {\r\n        degree = degree * (Math.PI / 180)\r\n        return (y * Math.cos(degree)) + (x * Math.sin(degree))\r\n    }\r\n    let points = []\r\n    //X,Y\r\n    points[0] = {\r\n        x: getRotatedX(-sprite.width / 2, -sprite.height / 2, sprite.degree) + sprite.width / 2,\r\n        y: getRotatedY(-sprite.width / 2, -sprite.height / 2, sprite.degree) + sprite.height / 2\r\n    }\r\n    //X, Y + Height\r\n    points[1] = {\r\n        x: getRotatedX(-sprite.width / 2, sprite.height / 2, sprite.degree) + sprite.width / 2,\r\n        y: getRotatedY(-sprite.width / 2, sprite.height / 2, sprite.degree) + sprite.height / 2\r\n    }\r\n    //X + Width, Y + Height\r\n    points[2] = {\r\n        x: getRotatedX(sprite.width / 2, sprite.height / 2, sprite.degree) + sprite.width / 2,\r\n        y: getRotatedY(sprite.width / 2, sprite.height / 2, sprite.degree) + sprite.height / 2\r\n    }\r\n    //X + Width, Y\r\n    points[3] = {\r\n        x: getRotatedX(sprite.width / 2, -sprite.height / 2, sprite.degree) + sprite.width / 2,\r\n        y: getRotatedY(sprite.width / 2, -sprite.height / 2, sprite.degree) + sprite.height / 2\r\n    }\r\n    return points\r\n}","/**\r\n     * Converts degrees to radians.\r\n     *\r\n     * @param degrees the degrees.\r\n     * @return the converted radians.\r\n     */\r\nexport default function rad(degrees) {\r\n    return degrees * (Math.PI / 180);\r\n}","\r\nexport default function loadImg(img, height, width) {\r\n    let imageName = `${img} ${height}x${width}`\r\n    imgNames.push(imageName)\r\n    let localImg = new Image()\r\n    localImg.src = img\r\n    localImg.onload = function (ev) {\r\n        let cvs = document.createElement(\"canvas\")\r\n        cvs.width = width\r\n        cvs.height = height\r\n        let ctx = cvs.getContext(\"2d\")\r\n        //document.body.appendChild(cvs)\r\n        ctx.drawImage(ev.target, 0, 0, width, height)\r\n        spriteImg[imageName] = {}\r\n        spriteImg[imageName].image = new Image()\r\n        spriteImg[imageName].image.src = cvs.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\r\n\r\n    }\r\n}","\r\n/**\r\n * Draws a rotated image on canvas using the 2d context.\r\n *\r\n * @param context the canvases 2d context.\r\n * @param image the sprite's image\r\n * @param sprite the sprite to draw\r\n */\r\nexport default function drawRotatedImage(context, image, sprite) {\r\n\r\n\r\n    let x = sprite.x + image.width / 2\r\n    let y = sprite.y + image.height / 2\r\n    let degree = sprite.degree - 90\r\n    // save the current co-ordinate system \r\n    // before we screw with it\r\n    context.save();\r\n\r\n    // move to the middle of where we want to draw our image\r\n    context.translate(x, y);\r\n\r\n    // rotate around that point, converting our \r\n    // angle from degrees to radians \r\n    context.rotate(rad(degree));\r\n\r\n    // draw it up and to the left by half the width\r\n    // and height of the image \r\n    context.drawImage(image, -(image.width / 2), -(image.height / 2));\r\n\r\n    // and restore the co-ords to how they were when we began\r\n    context.restore();\r\n}","export default class Sprite {\r\n    constructor({\r\n        x,\r\n        y,\r\n        degree,\r\n        layer,\r\n        nickname,\r\n        width,\r\n        height,\r\n        points,\r\n        autoSize = true,\r\n        hidden\r\n    }) {\r\n        this.x = x || 0\r\n        this.y = y || 0\r\n        this.degree = degree === undefined ? 90 : degree\r\n        this.nickname = nickname || \"\"\r\n        this.layer = layer || 0\r\n        this.width = width || 0\r\n        this.height = height || 0\r\n        this.physics = {}\r\n        this.type = null\r\n        this.autoSize = autoSize\r\n        this.hidden = hidden || false\r\n        this.id = (function () {\r\n            if (Object.keys(sprites) == []) {\r\n                return 0;\r\n            }\r\n            for (let x in Object.keys(sprites)) {\r\n                if (x != (sprites[x] === undefined ? undefined : sprites[x].id)) {\r\n                    return x;\r\n                }\r\n            }\r\n            return Object.keys(sprites).length\r\n        })()\r\n        let types = [\"x\", \"y\", \"degree\", \"width\", \"height\"]\r\n        for (let x in Object.values(arguments[0])) {\r\n            if (isNaN(parseInt(Object.values(arguments[0])[x])) && (types.includes(Object.keys(arguments[0])[x])) && !(Object.values(arguments[0])[x] === undefined)) {\r\n                throw new Error(`Supplied value type of ${typeof Object.values(arguments[0])[x]}(Or NaN) for argument ${Object.keys(arguments[0])[x]} in a Sprite, must be a number`)\r\n            }\r\n        }\r\n        this.points = points || getPoints(this)\r\n        this.stage = null\r\n        sprites[this.id] = this\r\n    }\r\n    collisionWithSolid() {\r\n        for (let i in sprites) {\r\n            if (sprites[i].physics.solid && sprites[i].id !== this.id) {\r\n                let sprite = sprites[i]\r\n                if (this.collisionWith(sprite)) {\r\n                    return sprite;\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    collisionWith(sprite) { //TODO: Add rotated collision check\r\n        return (Math.abs((this.x + this.width / 2) - (sprite.x + sprite.width / 2)) <= this.width / 2 + sprite.width / 2 && Math.abs((this.y + this.height / 2) - (sprite.y + sprite.height / 2)) <= this.height / 2 + sprite.height / 2)\r\n    }\r\n    delete() {\r\n        if (this.deleted)\r\n            return\r\n        if (this.physics.calcHandle !== undefined) {\r\n            cancelAnimationFrame(this.physics.calcHandle)\r\n        }\r\n        delete sprites[this.id]\r\n        if (this.stage)\r\n            delete this.stage.sprites[this.id]\r\n        this.deleted = true\r\n\r\n    }\r\n    togglePhysics({\r\n        velocity = 0,\r\n        acceleration = 0,\r\n        velocityLoss = 0,\r\n        accelerationLoss = 0,\r\n        degree = 0,\r\n        maxVelocity = undefined,\r\n        gravityVelocity = 0,\r\n        gravityAcceleration = 0,\r\n        gravityDegree = 90,\r\n        gravityMaxVelocity = undefined,\r\n        solid = false\r\n    } = {\r\n            velocity: 0,\r\n            acceleration: 0,\r\n            velocityLoss: 0,\r\n            accelerationLoss: 0,\r\n            degree: 0,\r\n            maxVelocity: undefined,\r\n            gravityVelocity: 0,\r\n            gravityAcceleration: 0,\r\n            gravityDegree: 90,\r\n            gravityMaxVelocity: undefined,\r\n            solid: false\r\n        }) {\r\n        this.physics.velocity = velocity // Starting velocity\r\n        this.physics.acceleration = acceleration // Starting acceleration\r\n        this.physics.velocityLoss = velocityLoss // Velocity Loss\r\n        this.physics.accelerationLoss = accelerationLoss // Acceleration Loss\r\n        this.physics.degree = degree // Degree to move to\r\n        this.physics.maxVelocity = maxVelocity //The maximum velocity\r\n        this.physics.gravityAcceleration = gravityAcceleration // Gravity acceleration\r\n        this.physics.gravityVelocity = gravityVelocity // Gravity velocity\r\n        this.physics.gravityDegree = gravityDegree // Degree to move to\r\n        this.physics.gravityMaxVelocity = gravityMaxVelocity //The maximum gravity velocity\r\n        this.physics.solid = solid //If the object is solid\r\n        const physicsCalc = () => {\r\n            //Gravity movement calculation(No loss)\r\n            this.physics.gravityVelocity += this.physics.gravityAcceleration / 60\r\n            if (!this.collisionWithSolid()) {\r\n                this.x += this.physics.gravityVelocity / 60 * Math.cos(rad(this.physics.gravityDegree));\r\n            } else {\r\n                this.physics.gravityVelocity = 0\r\n            }\r\n            if (!this.collisionWithSolid()) {\r\n                this.y += this.physics.gravityVelocity / 60 * Math.sin(rad(this.physics.gravityDegree));\r\n            } else {\r\n                this.physics.gravityVelocity = 0\r\n            }\r\n            if (this.physics.gravityVelocity > this.physics.gravityMaxVelocity) {\r\n                this.physics.gravityVelocity = this.physics.gravityMaxVelocity\r\n            }\r\n            //Normal movement calculation(With loss)\r\n            this.physics.velocity += this.physics.acceleration / 60\r\n            this.physics.velocity -= (this.physics.velocity - this.physics.velocityLoss / 60 < 0 ? this.physics.velocity : this.physics.velocityLoss / 60)\r\n            this.physics.acceleration -= (this.physics.acceleration - this.physics.accelerationLoss / 60 < 0 ? this.physics.acceleration : this.physics.accelerationLoss / 60)\r\n            if (!this.collisionWithSolid()) {\r\n                this.x += this.physics.velocity / 60 * Math.cos(rad(this.physics.degree));\r\n            } else {\r\n                this.physics.velocity = 0\r\n            }\r\n            if (!this.collisionWithSolid()) {\r\n                this.y += this.physics.velocity / 60 * Math.sin(rad(this.physics.degree));\r\n            } else {\r\n                this.physics.velocity = 0\r\n            }\r\n            if (this.physics.velocity > this.physics.maxVelocity) {\r\n                this.physics.velocity = this.physics.maxVelocity\r\n            }\r\n            this.physics.calcHandle = requestAnimationFrame(physicsCalc)\r\n        }\r\n        this.physics.calcHandle = requestAnimationFrame(physicsCalc)\r\n    }\r\n    togglePlayer({\r\n        maxSpeed,\r\n        acceleration\r\n    }) {\r\n        this.player = {\r\n            looking: null,\r\n            maxSpeed: maxSpeed || 500,\r\n            acceleration: acceleration || 50\r\n        }\r\n        this.togglePhysics({\r\n            solid: true\r\n        })\r\n        const playerCalc = () => {\r\n\r\n\r\n        }\r\n        this.physics.calcHandle = requestAnimationFrame(playerCalc)\r\n    }\r\n}","'use strict';\r\n// This function will contain all our code\r\nconsole.log(\"%cPowered by the ʐ̈uckor engine\\n%cMade by G lander\", \"background: #005454; color: #BFF8F8;font-size:20px\", \"color:#0000ff;background:#BFF8F8;font-size:13px\")\r\n\r\nlet sprites = {};\r\nlet stages = {};\r\nlet spriteImg = {};\r\nlet imgNames = [];\r\nlet imgNameSizes = {}\r\nSprite.Img = Img\r\nSprite.Rect = Rect\r\nSprite.Circle = Circle\r\nimport Sprite from \"./classes/sprite\"\r\nimport Stage from \"./classes/stage\"\r\nimport loadImg from \"./functions/loadImg\"\r\nexport {\r\n    Sprite,\r\n    Stage,\r\n    sprites,\r\n    stages,\r\n    loadImg,\r\n    spriteImg,\r\n    imgNames,\r\n    imgNameSizes\r\n}","export default class Img extends Sprite {\r\n    constructor({\r\n        x,\r\n        y,\r\n        degree,\r\n        layer,\r\n        width,\r\n        height,\r\n        points,\r\n        autoSize = true,\r\n        hidden,\r\n        nickname,\r\n        image\r\n    }) {\r\n        super({\r\n            x,\r\n            y,\r\n            degree,\r\n            layer,\r\n            width,\r\n            height,\r\n            points,\r\n            autoSize,\r\n            hidden,\r\n            nickname\r\n        })\r\n        this.image = image || \"\"\r\n        this.type = \"image\"\r\n        this.renderer = (context) => {\r\n            if (!(this.width && this.height)) {\r\n                let spriteImage = imgNameSizes[this.image]\r\n                if (!spriteImage) {\r\n                    imgNameSizes[this.image] = new Image();\r\n                    imgNameSizes[this.image].src = this.image\r\n                    spriteImage = imgNameSizes[this.image]\r\n                }\r\n                if (this.autoSize) {\r\n                    if (!this.width) this.width = spriteImage.width\r\n                    if (!this.height) this.height = spriteImage.height\r\n                } else {\r\n                    if (!this.width) this.width = 1\r\n                    if (!this.height) this.height = 1\r\n                }\r\n\r\n            }\r\n            let imageName = `${this.image} ${this.height}x${this.width}`\r\n            if (!(imgNames.includes(imageName)))\r\n                loadImg(this.image, this.height, this.width, this, context)\r\n            else\r\n                if ((Object.keys(spriteImg).includes(imageName)))\r\n                    drawRotatedImage(context, spriteImg[imageName].image, this)\r\n\r\n        }\r\n    }\r\n}\r\n","export default class Rect extends Sprite {\r\n    constructor({\r\n        x,\r\n        y,\r\n        degree,\r\n        layer,\r\n        width,\r\n        height,\r\n        points,\r\n        autoSize = true,\r\n        hidden,\r\n        nickname,\r\n        inColor,\r\n        outColor,\r\n        lineWidth\r\n    }) {\r\n        super({\r\n            x,\r\n            y,\r\n            degree,\r\n            layer,\r\n            width,\r\n            height,\r\n            points,\r\n            autoSize,\r\n            hidden,\r\n            nickname\r\n        })\r\n        this.lineWidth = lineWidth || 1\r\n        this.inColor = inColor || \"#000000\"\r\n        this.outColor = outColor || \"#ff0000\"\r\n        this.type = \"rectangle\"\r\n        this.renderer = (context) => {\r\n            context.fillStyle = sprite.color;\r\n            context.lineWidth = sprite.lineWidth;\r\n            context.fillRect(sprite.x, sprite.y, sprite.width, sprite.height)\r\n        }\r\n    }\r\n}\r\n","export default class Circle extends Sprite {\r\n    constructor({\r\n        x,\r\n        y,\r\n        degree,\r\n        layer,\r\n        width,\r\n        height,\r\n        points,\r\n        autoSize = true,\r\n        hidden,\r\n        nickname,\r\n        radius,\r\n        outColor,\r\n        inColor,\r\n        lineWidth\r\n    }) {\r\n        super({\r\n            x,\r\n            y,\r\n            degree,\r\n            layer,\r\n            width,\r\n            height,\r\n            points,\r\n            autoSize,\r\n            hidden,\r\n            nickname\r\n        })\r\n        this.radius = radius || 0\r\n        this.outColor = outColor || \"#ffffff\"\r\n        this.inColor = inColor || \"#ffffff\"\r\n        this.lineWidth = lineWidth || 1\r\n        this.type = \"circle\"\r\n        this.renderer = (context) => {\r\n            context.lineWidth = sprite.lineWidth;\r\n            sprite.width = sprite.radius * 2\r\n            sprite.height = sprite.radius * 2\r\n            sprites[sprite.id].width = sprite.radius * 2\r\n            sprites[sprite.id].height = sprite.radius * 2\r\n            context.beginPath();\r\n            context.arc(sprite.x + sprite.radius, sprite.y + sprite.radius, sprite.radius, Math.PI, 3 * Math.PI);\r\n            context.strokeStyle = sprite.outColor;\r\n            context.fillStyle = sprite.inColor;\r\n            context.stroke();\r\n            context.fill();\r\n        }\r\n    }\r\n}\r\n","export default class Stage {\r\n    constructor({\r\n        height: height = 500,\r\n        width: width = 500,\r\n        color: color = undefined,\r\n        canvas: canvas = document.getElementById(\"game\"),\r\n    } = {\r\n            height: 500,\r\n            width: 500,\r\n            color: undefined,\r\n            canvas: document.getElementById(\"game\"),\r\n        }) {\r\n        canvas.height = height\r\n        canvas.width = width\r\n        this.id = (function () {\r\n            if (Object.keys(stages) == []) {\r\n                return 0;\r\n            }\r\n            for (let x in Object.keys(stages)) {\r\n                if (x != (stages[x] === undefined ? undefined : stages[x].id)) {\r\n                    return x;\r\n                }\r\n            }\r\n            return Object.keys(stages).length\r\n        })()\r\n        stages[this.id] = this\r\n        this.sprites = {}\r\n        canvas.addEventListener('click', (e) => {\r\n            const rect = canvas.getBoundingClientRect()\r\n            const x = e.clientX - rect.left\r\n            const y = e.clientY - rect.top\r\n            console.log(\"x: \" + x + \" y: \" + y)\r\n            for (let i in this.sprites) {\r\n                if ((x > this.sprites[i].x) && ((this.sprites[i].x + this.sprites[i].width) > x) && this.sprites[i].y < y && this.sprites[i].y + this.sprites[i].height > y) {\r\n                    if (this.sprites[i].onClick instanceof Function) {\r\n                        this.sprites[i].onClick(e)\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        })\r\n        canvas.onmousemove = (e) => {\r\n            const rect = canvas.getBoundingClientRect()\r\n            const x = e.clientX - rect.left\r\n            const y = e.clientY - rect.top\r\n            for (let i in this.sprites) {\r\n                if ((x > this.sprites[i].x) && ((this.sprites[i].x + this.sprites[i].width) > x) && this.sprites[i].y < y && this.sprites[i].y + this.sprites[i].height > y) {\r\n                    if (this.sprites[i].onMouseOver instanceof Function) {\r\n                        this.sprites[i].onMouseOver(e)\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.color = color\r\n        this.height = height\r\n        this.width = width\r\n        canvas.width = this.width\r\n        canvas.height = this.height\r\n        let context = canvas.getContext(\"2d\");\r\n        this.context = context\r\n        //Render process\r\n        let renderer = () => {\r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n            if (this.color != undefined) {\r\n                context.fillStyle = this.color\r\n                context.fillRect(0, 0, canvas.width, canvas.height);\r\n            }\r\n            let orderedSprites = Object.values(this.sprites).sort(function (a, b) {\r\n                let x = a[\"layer\"];\r\n                let y = b[\"layer\"];\r\n                return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n            })\r\n            for (let i in orderedSprites) {\r\n                let currentSprite = orderedSprites[i]\r\n                currentSprite.x = Math.trunc(currentSprite.x)\r\n                currentSprite.y = Math.trunc(currentSprite.y)\r\n                currentSprite.height = Math.trunc(currentSprite.height)\r\n                currentSprite.width = Math.trunc(currentSprite.width)\r\n                if (currentSprite.renderer === undefined && currentSprite.renderer !== null)\r\n                    throw new Error(\"All Sprites must have renderers.\")\r\n                //if (currentSprite.renderer.getPrototype() !== Function)\r\n                //    throw new Error(\"Sprite renderers must be functions.\")\r\n                if (!currentSprite.hidden)\r\n                    currentSprite.renderer(context)\r\n\r\n            }\r\n            this.renderHandle = requestAnimationFrame(renderer)\r\n        }\r\n        this.renderHandle = requestAnimationFrame(renderer)\r\n    }\r\n    //get sprites() {\r\n    //    return clone(sprites)\r\n    //}\r\n    assign(sprite) {\r\n        this.sprites[sprite.id] = sprite\r\n        sprites[sprite.id].stage = this\r\n    }\r\n    delete() {\r\n        cancelAnimationFrame(this.renderHandle);\r\n        delete stages[this.id]\r\n    }\r\n}\r\n"],"names":["Math","sin","cos","PI","getPoints","sprite","getRotatedX","x","y","degree","getRotatedY","points","width","height","rad","degrees","loadImg","img","imageName","imgNames","push","localImg","Image","src","onload","ev","cvs","document","createElement","ctx","getContext","drawImage","target","spriteImg","image","toDataURL","replace","drawRotatedImage","context","save","translate","rotate","restore","Sprite","constructor","layer","nickname","autoSize","hidden","physics","type","id","Object","keys","sprites","length","types","values","arguments","isNaN","parseInt","includes","Error","stage","collisionWithSolid","i","solid","collisionWith","abs","delete","deleted","calcHandle","cancelAnimationFrame","togglePhysics","velocity","acceleration","velocityLoss","accelerationLoss","maxVelocity","gravityVelocity","gravityAcceleration","gravityDegree","gravityMaxVelocity","physicsCalc","requestAnimationFrame","togglePlayer","maxSpeed","player","looking","console","log","stages","imgNameSizes","Img","renderer","spriteImage","Rect","inColor","outColor","lineWidth","fillStyle","color","fillRect","Circle","radius","beginPath","arc","strokeStyle","stroke","fill","canvas","getElementById","addEventListener","e","rect","getBoundingClientRect","clientX","left","clientY","top","onClick","Function","onmousemove","onMouseOver","trunc","clearRect","orderedSprites","sort","a","b","currentSprite","renderHandle","assign"],"mappings":"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"}