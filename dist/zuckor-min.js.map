{"version":3,"file":"zuckor-min.js","sources":["../src/functions/old/getPoints.js","../src/functions/rad.js","../src/classes/sprite.js","../src/functions/loadImg.js","../src/functions/drawRotatedImage.js","../src/renders/image.js","../src/renders/rect.js","../src/renders/circle.js","../src/classes/stage.js","../src/index.js"],"sourcesContent":["\r\n/**\r\n * Gets the sprite's points\r\n *\r\n * @param sprite the sprite to get the point to.\r\n * @return the sprites points.\r\n */\r\nexport default function getPoints(sprite) {\r\n    function getRotatedX(x, y, degree) {\r\n        degree = degree * (Math.PI / 180)\r\n        return (x * Math.cos(degree)) - (y * Math.sin(degree))\r\n    }\r\n\r\n    function getRotatedY(x, y, degree) {\r\n        degree = degree * (Math.PI / 180)\r\n        return (y * Math.cos(degree)) + (x * Math.sin(degree))\r\n    }\r\n    let points = []\r\n    //X,Y\r\n    points[0] = {\r\n        x: getRotatedX(-sprite.width / 2, -sprite.height / 2, sprite.degree) + sprite.width / 2,\r\n        y: getRotatedY(-sprite.width / 2, -sprite.height / 2, sprite.degree) + sprite.height / 2\r\n    }\r\n    //X, Y + Height\r\n    points[1] = {\r\n        x: getRotatedX(-sprite.width / 2, sprite.height / 2, sprite.degree) + sprite.width / 2,\r\n        y: getRotatedY(-sprite.width / 2, sprite.height / 2, sprite.degree) + sprite.height / 2\r\n    }\r\n    //X + Width, Y + Height\r\n    points[2] = {\r\n        x: getRotatedX(sprite.width / 2, sprite.height / 2, sprite.degree) + sprite.width / 2,\r\n        y: getRotatedY(sprite.width / 2, sprite.height / 2, sprite.degree) + sprite.height / 2\r\n    }\r\n    //X + Width, Y\r\n    points[3] = {\r\n        x: getRotatedX(sprite.width / 2, -sprite.height / 2, sprite.degree) + sprite.width / 2,\r\n        y: getRotatedY(sprite.width / 2, -sprite.height / 2, sprite.degree) + sprite.height / 2\r\n    }\r\n    return points\r\n}","/**\r\n     * Converts degrees to radians.\r\n     *\r\n     * @param degrees the degrees.\r\n     * @return the converted radians.\r\n     */\r\nexport default function rad(degrees) {\r\n    return degrees * (Math.PI / 180);\r\n}","export default class Sprite {\r\n    constructor({\r\n        x,\r\n        y,\r\n        degree,\r\n        layer,\r\n        nickname,\r\n        width,\r\n        height,\r\n        points,\r\n        autoSize = true,\r\n        hidden\r\n    }) {\r\n        this.x = x || 0\r\n        this.y = y || 0\r\n        this.degree = degree === undefined ? 90 : degree\r\n        this.nickname = nickname || \"\"\r\n        this.layer = layer || 0\r\n        this.width = width || 0\r\n        this.height = height || 0\r\n        this.physics = {}\r\n        this.type = null\r\n        this.autoSize = autoSize\r\n        this.hidden = hidden || false\r\n        this.id = (function () {\r\n            if (Object.keys(sprites) == []) {\r\n                return 0;\r\n            }\r\n            for (let x in Object.keys(sprites)) {\r\n                if (x != (sprites[x] === undefined ? undefined : sprites[x].id)) {\r\n                    return x;\r\n                }\r\n            }\r\n            return Object.keys(sprites).length\r\n        })()\r\n        let types = [\"x\", \"y\", \"degree\", \"width\", \"height\"]\r\n        for (let x in Object.values(arguments[0])) {\r\n            if (isNaN(parseInt(Object.values(arguments[0])[x])) && (types.includes(Object.keys(arguments[0])[x])) && !(Object.values(arguments[0])[x] === undefined)) {\r\n                throw new Error(`Supplied value type of ${typeof Object.values(arguments[0])[x]}(Or NaN) for argument ${Object.keys(arguments[0])[x]} in a Sprite, must be a number`)\r\n            }\r\n        }\r\n        this.points = points || getPoints(this)\r\n        this.stage = null\r\n        sprites[this.id] = this\r\n    }\r\n    collisionWithSolid() {\r\n        for (let i in sprites) {\r\n            if (sprites[i].physics.solid && sprites[i].id !== this.id) {\r\n                let sprite = sprites[i]\r\n                if (this.collisionWith(sprite)) {\r\n                    return sprite;\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    collisionWith(sprite) { //TODO: Add rotated collision check\r\n        return (Math.abs((this.x + this.width / 2) - (sprite.x + sprite.width / 2)) <= this.width / 2 + sprite.width / 2 && Math.abs((this.y + this.height / 2) - (sprite.y + sprite.height / 2)) <= this.height / 2 + sprite.height / 2)\r\n    }\r\n    delete() {\r\n        if (this.deleted)\r\n            return\r\n        if (this.physics.calcHandle !== undefined) {\r\n            cancelAnimationFrame(this.physics.calcHandle)\r\n        }\r\n        delete sprites[this.id]\r\n        if (this.stage)\r\n            delete this.stage.sprites[this.id]\r\n        this.deleted = true\r\n\r\n    }\r\n    togglePhysics({\r\n        velocity = 0,\r\n        acceleration = 0,\r\n        velocityLoss = 0,\r\n        accelerationLoss = 0,\r\n        degree = 0,\r\n        maxVelocity = undefined,\r\n        gravityVelocity = 0,\r\n        gravityAcceleration = 0,\r\n        gravityDegree = 90,\r\n        gravityMaxVelocity = undefined,\r\n        solid = false\r\n    } = {\r\n            velocity: 0,\r\n            acceleration: 0,\r\n            velocityLoss: 0,\r\n            accelerationLoss: 0,\r\n            degree: 0,\r\n            maxVelocity: undefined,\r\n            gravityVelocity: 0,\r\n            gravityAcceleration: 0,\r\n            gravityDegree: 90,\r\n            gravityMaxVelocity: undefined,\r\n            solid: false\r\n        }) {\r\n        this.physics.velocity = velocity // Starting velocity\r\n        this.physics.acceleration = acceleration // Starting acceleration\r\n        this.physics.velocityLoss = velocityLoss // Velocity Loss\r\n        this.physics.accelerationLoss = accelerationLoss // Acceleration Loss\r\n        this.physics.degree = degree // Degree to move to\r\n        this.physics.maxVelocity = maxVelocity //The maximum velocity\r\n        this.physics.gravityAcceleration = gravityAcceleration // Gravity acceleration\r\n        this.physics.gravityVelocity = gravityVelocity // Gravity velocity\r\n        this.physics.gravityDegree = gravityDegree // Degree to move to\r\n        this.physics.gravityMaxVelocity = gravityMaxVelocity //The maximum gravity velocity\r\n        this.physics.solid = solid //If the object is solid\r\n        const physicsCalc = () => {\r\n            //Gravity movement calculation(No loss)\r\n            this.physics.gravityVelocity += this.physics.gravityAcceleration / 60\r\n            if (!this.collisionWithSolid()) {\r\n                this.x += this.physics.gravityVelocity / 60 * Math.cos(rad(this.physics.gravityDegree));\r\n            } else {\r\n                this.physics.gravityVelocity = 0\r\n            }\r\n            if (!this.collisionWithSolid()) {\r\n                this.y += this.physics.gravityVelocity / 60 * Math.sin(rad(this.physics.gravityDegree));\r\n            } else {\r\n                this.physics.gravityVelocity = 0\r\n            }\r\n            if (this.physics.gravityVelocity > this.physics.gravityMaxVelocity) {\r\n                this.physics.gravityVelocity = this.physics.gravityMaxVelocity\r\n            }\r\n            //Normal movement calculation(With loss)\r\n            this.physics.velocity += this.physics.acceleration / 60\r\n            this.physics.velocity -= (this.physics.velocity - this.physics.velocityLoss / 60 < 0 ? this.physics.velocity : this.physics.velocityLoss / 60)\r\n            this.physics.acceleration -= (this.physics.acceleration - this.physics.accelerationLoss / 60 < 0 ? this.physics.acceleration : this.physics.accelerationLoss / 60)\r\n            if (!this.collisionWithSolid()) {\r\n                this.x += this.physics.velocity / 60 * Math.cos(rad(this.physics.degree));\r\n            } else {\r\n                this.physics.velocity = 0\r\n            }\r\n            if (!this.collisionWithSolid()) {\r\n                this.y += this.physics.velocity / 60 * Math.sin(rad(this.physics.degree));\r\n            } else {\r\n                this.physics.velocity = 0\r\n            }\r\n            if (this.physics.velocity > this.physics.maxVelocity) {\r\n                this.physics.velocity = this.physics.maxVelocity\r\n            }\r\n            this.physics.calcHandle = requestAnimationFrame(physicsCalc)\r\n        }\r\n        this.physics.calcHandle = requestAnimationFrame(physicsCalc)\r\n    }\r\n    togglePlayer({\r\n        maxSpeed,\r\n        acceleration\r\n    }) {\r\n        this.player = {\r\n            looking: null,\r\n            maxSpeed: maxSpeed || 500,\r\n            acceleration: acceleration || 50\r\n        }\r\n        this.togglePhysics({\r\n            solid: true\r\n        })\r\n        const playerCalc = () => {\r\n\r\n\r\n        }\r\n        this.physics.calcHandle = requestAnimationFrame(playerCalc)\r\n    }\r\n}","\r\nexport default function loadImg(img, height, width) {\r\n    let imageName = `${img} ${height}x${width}`\r\n    imgNames.push(imageName)\r\n    let localImg = new Image()\r\n    localImg.src = img\r\n    localImg.onload = function (ev) {\r\n        let cvs = document.createElement(\"canvas\")\r\n        cvs.width = width\r\n        cvs.height = height\r\n        let ctx = cvs.getContext(\"2d\")\r\n        //document.body.appendChild(cvs)\r\n        ctx.drawImage(ev.target, 0, 0, width, height)\r\n        spriteImg[imageName] = {}\r\n        spriteImg[imageName].image = new Image()\r\n        spriteImg[imageName].image.src = cvs.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\r\n\r\n    }\r\n}","\r\n/**\r\n * Draws a rotated image on canvas using the 2d context.\r\n *\r\n * @param context the canvases 2d context.\r\n * @param image the sprite's image\r\n * @param sprite the sprite to draw\r\n */\r\nexport default function drawRotatedImage(context, image, sprite) {\r\n\r\n\r\n    let x = sprite.x + image.width / 2\r\n    let y = sprite.y + image.height / 2\r\n    let degree = sprite.degree - 90\r\n    // save the current co-ordinate system \r\n    // before we screw with it\r\n    context.save();\r\n\r\n    // move to the middle of where we want to draw our image\r\n    context.translate(x, y);\r\n\r\n    // rotate around that point, converting our \r\n    // angle from degrees to radians \r\n    context.rotate(rad(degree));\r\n\r\n    // draw it up and to the left by half the width\r\n    // and height of the image \r\n    context.drawImage(image, -(image.width / 2), -(image.height / 2));\r\n\r\n    // and restore the co-ords to how they were when we began\r\n    context.restore();\r\n}","export default class Img extends Sprite {\r\n    constructor({\r\n        x,\r\n        y,\r\n        degree,\r\n        layer,\r\n        width,\r\n        height,\r\n        points,\r\n        autoSize = true,\r\n        hidden,\r\n        nickname,\r\n        image\r\n    }) {\r\n        super({\r\n            x,\r\n            y,\r\n            degree,\r\n            layer,\r\n            width,\r\n            height,\r\n            points,\r\n            autoSize,\r\n            hidden,\r\n            nickname\r\n        })\r\n        this.image = image || \"\"\r\n        this.type = \"image\"\r\n        this.renderer = (context) => {\r\n            if (!(this.width && this.height)) {\r\n                let spriteImage = imgNameSizes[this.image]\r\n                if (!spriteImage) {\r\n                    imgNameSizes[this.image] = new Image();\r\n                    imgNameSizes[this.image].src = this.image\r\n                    spriteImage = imgNameSizes[this.image]\r\n                }\r\n                if (this.autoSize) {\r\n                    if (!this.width) this.width = spriteImage.width\r\n                    if (!this.height) this.height = spriteImage.height\r\n                } else {\r\n                    if (!this.width) this.width = 1\r\n                    if (!this.height) this.height = 1\r\n                }\r\n\r\n            }\r\n            let imageName = `${this.image} ${this.height}x${this.width}`\r\n            if (!(imgNames.includes(imageName)))\r\n                loadImg(this.image, this.height, this.width, this, context)\r\n            else\r\n                if ((Object.keys(spriteImg).includes(imageName)))\r\n                    drawRotatedImage(context, spriteImg[imageName].image, this)\r\n\r\n        }\r\n    }\r\n}\r\n","export default class Rect extends Sprite {\r\n    constructor({\r\n        x,\r\n        y,\r\n        degree,\r\n        layer,\r\n        width,\r\n        height,\r\n        points,\r\n        autoSize = true,\r\n        hidden,\r\n        nickname,\r\n        inColor,\r\n        outColor,\r\n        lineWidth\r\n    }) {\r\n        super({\r\n            x,\r\n            y,\r\n            degree,\r\n            layer,\r\n            width,\r\n            height,\r\n            points,\r\n            autoSize,\r\n            hidden,\r\n            nickname\r\n        })\r\n        this.lineWidth = lineWidth || 1\r\n        this.inColor = inColor || \"#000000\"\r\n        this.outColor = outColor || \"#ff0000\"\r\n        this.type = \"rectangle\"\r\n        this.renderer = (context) => {\r\n            context.fillStyle = sprite.color;\r\n            context.lineWidth = sprite.lineWidth;\r\n            context.fillRect(sprite.x, sprite.y, sprite.width, sprite.height)\r\n        }\r\n    }\r\n}\r\n","export default class Circle extends Sprite {\r\n    constructor({\r\n        x,\r\n        y,\r\n        degree,\r\n        layer,\r\n        width,\r\n        height,\r\n        points,\r\n        autoSize = true,\r\n        hidden,\r\n        nickname,\r\n        radius,\r\n        outColor,\r\n        inColor,\r\n        lineWidth\r\n    }) {\r\n        super({\r\n            x,\r\n            y,\r\n            degree,\r\n            layer,\r\n            width,\r\n            height,\r\n            points,\r\n            autoSize,\r\n            hidden,\r\n            nickname\r\n        })\r\n        this.radius = radius || 0\r\n        this.outColor = outColor || \"#ffffff\"\r\n        this.inColor = inColor || \"#ffffff\"\r\n        this.lineWidth = lineWidth || 1\r\n        this.type = \"circle\"\r\n        this.renderer = (context) => {\r\n            context.lineWidth = sprite.lineWidth;\r\n            sprite.width = sprite.radius * 2\r\n            sprite.height = sprite.radius * 2\r\n            sprites[sprite.id].width = sprite.radius * 2\r\n            sprites[sprite.id].height = sprite.radius * 2\r\n            context.beginPath();\r\n            context.arc(sprite.x + sprite.radius, sprite.y + sprite.radius, sprite.radius, Math.PI, 3 * Math.PI);\r\n            context.strokeStyle = sprite.outColor;\r\n            context.fillStyle = sprite.inColor;\r\n            context.stroke();\r\n            context.fill();\r\n        }\r\n    }\r\n}\r\n","export default class Stage {\r\n    constructor({\r\n        height: height = 500,\r\n        width: width = 500,\r\n        color: color = undefined,\r\n        canvas: canvas = document.getElementById(\"game\"),\r\n    } = {\r\n            height: 500,\r\n            width: 500,\r\n            color: undefined,\r\n            canvas: document.getElementById(\"game\"),\r\n        }) {\r\n        canvas.height = height\r\n        canvas.width = width\r\n        this.id = (function () {\r\n            if (Object.keys(stages) == []) {\r\n                return 0;\r\n            }\r\n            for (let x in Object.keys(stages)) {\r\n                if (x != (stages[x] === undefined ? undefined : stages[x].id)) {\r\n                    return x;\r\n                }\r\n            }\r\n            return Object.keys(stages).length\r\n        })()\r\n        stages[this.id] = this\r\n        this.sprites = {}\r\n        canvas.addEventListener('click', (e) => {\r\n            const rect = canvas.getBoundingClientRect()\r\n            const x = e.clientX - rect.left\r\n            const y = e.clientY - rect.top\r\n            console.log(\"x: \" + x + \" y: \" + y)\r\n            for (let i in this.sprites) {\r\n                if ((x > this.sprites[i].x) && ((this.sprites[i].x + this.sprites[i].width) > x) && this.sprites[i].y < y && this.sprites[i].y + this.sprites[i].height > y) {\r\n                    if (this.sprites[i].onClick instanceof Function) {\r\n                        this.sprites[i].onClick(e)\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        })\r\n        canvas.onmousemove = (e) => {\r\n            const rect = canvas.getBoundingClientRect()\r\n            const x = e.clientX - rect.left\r\n            const y = e.clientY - rect.top\r\n            for (let i in this.sprites) {\r\n                if ((x > this.sprites[i].x) && ((this.sprites[i].x + this.sprites[i].width) > x) && this.sprites[i].y < y && this.sprites[i].y + this.sprites[i].height > y) {\r\n                    if (this.sprites[i].onMouseOver instanceof Function) {\r\n                        this.sprites[i].onMouseOver(e)\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.color = color\r\n        this.height = height\r\n        this.width = width\r\n        canvas.width = this.width\r\n        canvas.height = this.height\r\n        let context = canvas.getContext(\"2d\");\r\n        this.context = context\r\n        //Render process\r\n        let renderer = () => {\r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n            if (this.color != undefined) {\r\n                context.fillStyle = this.color\r\n                context.fillRect(0, 0, canvas.width, canvas.height);\r\n            }\r\n            let orderedSprites = Object.values(this.sprites).sort(function (a, b) {\r\n                let x = a[\"layer\"];\r\n                let y = b[\"layer\"];\r\n                return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n            })\r\n            for (let i in orderedSprites) {\r\n                let currentSprite = orderedSprites[i]\r\n                currentSprite.x = Math.trunc(currentSprite.x)\r\n                currentSprite.y = Math.trunc(currentSprite.y)\r\n                currentSprite.height = Math.trunc(currentSprite.height)\r\n                currentSprite.width = Math.trunc(currentSprite.width)\r\n                if (currentSprite.renderer === undefined && currentSprite.renderer !== null)\r\n                    throw new Error(\"All Sprites must have renderers.\")\r\n                //if (currentSprite.renderer.getPrototype() !== Function)\r\n                //    throw new Error(\"Sprite renderers must be functions.\")\r\n                if (!currentSprite.hidden)\r\n                    currentSprite.renderer(context)\r\n\r\n            }\r\n            this.renderHandle = requestAnimationFrame(renderer)\r\n        }\r\n        this.renderHandle = requestAnimationFrame(renderer)\r\n    }\r\n    //get sprites() {\r\n    //    return clone(sprites)\r\n    //}\r\n    assign(sprite) {\r\n        this.sprites[sprite.id] = sprite\r\n        sprites[sprite.id].stage = this\r\n    }\r\n    delete() {\r\n        cancelAnimationFrame(this.renderHandle);\r\n        delete stages[this.id]\r\n    }\r\n}\r\n","'use strict';\r\n// This function will contain all our code\r\nconsole.log(\"%cPowered by the ʐ̈uckor engine\\n%cMade by G lander\", \"background: #005454; color: #BFF8F8;font-size:20px\", \"color:#0000ff;background:#BFF8F8;font-size:13px\")\r\n\r\nlet sprites = {};\r\nlet stages = {};\r\nlet spriteImg = {};\r\nlet imgNames = [];\r\nlet imgNameSizes = {}\r\nSprite.Img = Img\r\nSprite.Rect = Rect\r\nSprite.Circle = Circle\r\nimport Sprite from \"./classes/sprite\"\r\nimport Stage from \"./classes/stage\"\r\nimport loadImg from \"./functions/loadImg\"\r\nexport {\r\n    Sprite,\r\n    Stage,\r\n    sprites,\r\n    stages,\r\n    loadImg,\r\n    spriteImg,\r\n    imgNames,\r\n    imgNameSizes\r\n}"],"names":[],"mappings":"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"}