{"version":3,"file":"zuckor-min.js","sources":["../src/functions/rad.ts","../src/functions/loadImg.ts","../src/functions/drawRotatedImage.ts","../src/vars.ts","../src/classes/sprite.ts","../src/classes/stage.ts","../src/renders/circle.ts","../src/renders/rect.ts","../src/renders/image.ts","../src/index.ts"],"sourcesContent":["/**\r\n * Converts degrees to radians.\r\n *\r\n * @param degrees the degrees.\r\n * @return the converted radians.\r\n */\r\nexport default function rad(degrees: number) {\r\n  return degrees * (Math.PI / 180);\r\n}\r\n","import { spriteImg, imgNames } from \"../vars\";\r\n\r\nexport default function loadImg(img: string, height: number, width: number) {\r\n  let imageName = `${img} ${height}x${width}`;\r\n  imgNames.push(imageName);\r\n  let localImg = new Image();\r\n  localImg.src = img;\r\n  localImg.onload = function() {\r\n    let cvs = document.createElement(\"canvas\");\r\n    cvs.width = width;\r\n    cvs.height = height;\r\n    let ctx = cvs.getContext(\"2d\");\r\n    //document.body.appendChild(cvs)\r\n    ctx.drawImage(localImg, 0, 0, width, height);\r\n    spriteImg[imageName] = {};\r\n    spriteImg[imageName].image = new Image();\r\n    spriteImg[imageName].image.src = cvs\r\n      .toDataURL(\"image/png\")\r\n      .replace(\"image/png\", \"image/octet-stream\");\r\n  };\r\n}\r\n","import rad from \"./rad\";\r\nimport Sprite from \"../classes/sprite\";\r\n\r\n/**\r\n * Draws a rotated image on canvas using the 2d context.\r\n *\r\n * @param context the canvases 2d context.\r\n * @param image the sprite's image\r\n * @param sprite the sprite to draw\r\n */\r\nexport default function drawRotatedImage(\r\n  context: CanvasRenderingContext2D,\r\n  image: HTMLImageElement,\r\n  sprite: Sprite\r\n) {\r\n  let x = sprite.x + image.width / 2;\r\n  let y = sprite.y + image.height / 2;\r\n  let degree = sprite.degree - 90;\r\n  // save the current co-ordinate system\r\n  // before we screw with it\r\n  context.save();\r\n\r\n  // move to the middle of where we want to draw our image\r\n  context.translate(x, y);\r\n\r\n  // rotate around that point, converting our\r\n  // angle from degrees to radians\r\n  context.rotate(rad(degree));\r\n\r\n  // draw it up and to the left by half the width\r\n  // and height of the image\r\n  context.drawImage(image, -(image.width / 2), -(image.height / 2));\r\n\r\n  // and restore the co-ords to how they were when we began\r\n  context.restore();\r\n}\r\n","let sprites = {};\r\nlet stages = {};\r\nlet spriteImg = {};\r\nlet imgNames = [];\r\nlet imgNameSizes = {};\r\nexport { sprites, stages, spriteImg, imgNames, imgNameSizes };\r\n","import { sprites } from \"../vars\";\r\nimport Stage from \"./stage\";\r\nimport rad from \"../functions/rad\";\r\nimport IPhysics from \"../interfaces/physics\";\r\nimport IPlayer from \"../interfaces/player\";\r\n//import Img from \"../renders/image\";\r\n//import Rect from \"../renders/rect\";\r\n//import Circle from \"../renders/circle\";\r\nimport IRenderable from \"../interfaces/renderable\";\r\nexport default class Sprite implements IRenderable {\r\n  x = 0;\r\n  y = 0;\r\n  degree = 90;\r\n  layer = 0;\r\n  nickname: string;\r\n  width = 0;\r\n  height = 0;\r\n  points: any;\r\n  autoSize = true;\r\n  hidden = false;\r\n  physics: IPhysics = {};\r\n  player: IPlayer;\r\n  type = null;\r\n  id: number;\r\n  stage: Stage;\r\n  deleted = false;\r\n  onClick: Function;\r\n  onHover: Function;\r\n  renderer: Function;\r\n  static Img: any;\r\n  static Rect: any;\r\n  static Circle: any;\r\n  constructor({\r\n    x,\r\n    y,\r\n    degree,\r\n    layer,\r\n    nickname,\r\n    width,\r\n    height,\r\n    autoSize = true,\r\n    hidden\r\n  }) {\r\n    this.x = x || 0;\r\n    this.y = y || 0;\r\n    this.degree = degree == undefined ? 90 : degree;\r\n    this.nickname = nickname || \"\";\r\n    this.layer = layer || 0;\r\n    this.width = width || 0;\r\n    this.height = height || 0;\r\n    this.autoSize = autoSize;\r\n    this.hidden = hidden || false;\r\n    this.id = (function() {\r\n      if (Object.keys(sprites) == []) {\r\n        return 0;\r\n      }\r\n      for (let x in Object.keys(sprites)) {\r\n        if (x != (sprites[x] === undefined ? undefined : sprites[x].id)) {\r\n          return parseInt(x, 10);\r\n        }\r\n      }\r\n      return Object.keys(sprites).length;\r\n    })();\r\n    //this.points = points || getPoints(this);\r\n\r\n    this.stage = null;\r\n    sprites[this.id] = this;\r\n  }\r\n  collisionWithSolid() {\r\n    for (let i in sprites) {\r\n      if (sprites[i].physics.solid && sprites[i].id !== this.id) {\r\n        let sprite = sprites[i];\r\n        if (this.collisionWith(sprite)) {\r\n          return sprite;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  collisionWith(sprite: Sprite) {\r\n    //TODO: Add rotated box collision\r\n    return (\r\n      Math.abs(this.x + this.width / 2 - (sprite.x + sprite.width / 2)) <=\r\n        this.width / 2 + sprite.width / 2 &&\r\n      Math.abs(this.y + this.height / 2 - (sprite.y + sprite.height / 2)) <=\r\n        this.height / 2 + sprite.height / 2\r\n    );\r\n  }\r\n  delete() {\r\n    if (this.deleted) return;\r\n    if (this.physics.calcHandle !== undefined) {\r\n      cancelAnimationFrame(this.physics.calcHandle);\r\n    }\r\n    delete sprites[this.id];\r\n    if (this.stage) delete this.stage.sprites[this.stage.sprites.indexOf(this)];\r\n    this.deleted = true;\r\n  }\r\n  togglePhysics({\r\n    velocity = 0,\r\n    acceleration = 0,\r\n    velocityLoss = 0,\r\n    accelerationLoss = 0,\r\n    degree = 0,\r\n    maxVelocity = undefined,\r\n    gravityVelocity = 0,\r\n    gravityAcceleration = 0,\r\n    gravityDegree = 90,\r\n    gravityMaxVelocity = undefined,\r\n    solid = false\r\n  }: IPhysics = {}) {\r\n    this.physics = {\r\n      velocity, // Starting velocity\r\n      acceleration, // Starting acceleration\r\n      velocityLoss, // Velocity Loss\r\n      accelerationLoss, // Acceleration Loss\r\n      degree, // Degree to move to\r\n      maxVelocity, //The maximum velocity\r\n      gravityVelocity, // Gravity acceleration\r\n      gravityAcceleration, // Gravity velocity\r\n      gravityDegree, // Degree to move to\r\n      gravityMaxVelocity, //The maximum gravity velocity\r\n      solid, //If the object is solid\r\n      calcHandle: 0\r\n    };\r\n    const physicsCalc = () => {\r\n      //Gravity movement calculation(No loss)\r\n      this.physics.gravityVelocity += this.physics.gravityAcceleration / 60;\r\n      if (!this.collisionWithSolid()) {\r\n        this.x +=\r\n          (this.physics.gravityVelocity / 60) *\r\n          Math.cos(rad(this.physics.gravityDegree));\r\n      } else {\r\n        this.physics.gravityVelocity = 0;\r\n      }\r\n      if (!this.collisionWithSolid()) {\r\n        this.y +=\r\n          (this.physics.gravityVelocity / 60) *\r\n          Math.sin(rad(this.physics.gravityDegree));\r\n      } else {\r\n        this.physics.gravityVelocity = 0;\r\n      }\r\n      if (this.physics.gravityVelocity > this.physics.gravityMaxVelocity) {\r\n        this.physics.gravityVelocity = this.physics.gravityMaxVelocity;\r\n      }\r\n      //Normal movement calculation(With loss)\r\n      this.physics.velocity += this.physics.acceleration / 60;\r\n      this.physics.velocity -=\r\n        this.physics.velocity - this.physics.velocityLoss / 60 < 0\r\n          ? this.physics.velocity\r\n          : this.physics.velocityLoss / 60;\r\n      this.physics.acceleration -=\r\n        this.physics.acceleration - this.physics.accelerationLoss / 60 < 0\r\n          ? this.physics.acceleration\r\n          : this.physics.accelerationLoss / 60;\r\n      if (!this.collisionWithSolid()) {\r\n        this.x +=\r\n          (this.physics.velocity / 60) * Math.cos(rad(this.physics.degree));\r\n      } else {\r\n        this.physics.velocity = 0;\r\n      }\r\n      if (!this.collisionWithSolid()) {\r\n        this.y +=\r\n          (this.physics.velocity / 60) * Math.sin(rad(this.physics.degree));\r\n      } else {\r\n        this.physics.velocity = 0;\r\n      }\r\n      if (this.physics.velocity > this.physics.maxVelocity) {\r\n        this.physics.velocity = this.physics.maxVelocity;\r\n      }\r\n      this.physics.calcHandle = requestAnimationFrame(physicsCalc);\r\n    };\r\n    this.physics.calcHandle = requestAnimationFrame(physicsCalc);\r\n  }\r\n  togglePlayer({ maxSpeed, acceleration }) {\r\n    this.player = {\r\n      looking: false,\r\n      acceleration,\r\n      maxSpeed\r\n    };\r\n    this.togglePhysics({\r\n      solid: true\r\n    });\r\n    const playerCalc = () => {};\r\n    this.physics.calcHandle = requestAnimationFrame(playerCalc);\r\n  }\r\n}\r\n","import { stages, sprites } from \"../vars\";\r\nimport Sprite from \"./sprite\";\r\nimport IRenderable from \"../interfaces/renderable\";\r\n\r\nexport default class Stage {\r\n  canvas: HTMLCanvasElement;\r\n  id: number;\r\n  sprites: Array<IRenderable>;\r\n  color: string;\r\n  height: number;\r\n  width: number;\r\n  context: CanvasRenderingContext2D;\r\n  renderHandle: number;\r\n  constructor({\r\n    height = 500,\r\n    width = 500,\r\n    color = undefined,\r\n    canvas = undefined\r\n  } = {}) {\r\n    canvas.height = height || 500;\r\n    canvas.width = width;\r\n    this.id = (function() {\r\n      if (Object.keys(stages) == []) {\r\n        return 0;\r\n      }\r\n      for (let x in Object.keys(stages)) {\r\n        if (x != (stages[x] === undefined ? undefined : stages[x].id)) {\r\n          return parseInt(x, 10);\r\n        }\r\n      }\r\n      return Object.keys(stages).length;\r\n    })();\r\n    stages[this.id] = this;\r\n    this.sprites = [];\r\n    canvas.addEventListener(\"click\", (e: MouseEvent) => {\r\n      const rect = canvas.getBoundingClientRect();\r\n      const x = e.clientX - rect.left;\r\n      const y = e.clientY - rect.top;\r\n      console.log(\"x: \" + x + \" y: \" + y);\r\n      for (let i in this.sprites) {\r\n        if (\r\n          x > this.sprites[i].x &&\r\n          this.sprites[i].x + this.sprites[i].width > x &&\r\n          this.sprites[i].y < y &&\r\n          this.sprites[i].y + this.sprites[i].height > y\r\n        ) {\r\n          if (this.sprites[i].onClick instanceof Function)\r\n            this.sprites[i].onClick(e);\r\n\r\n          break;\r\n        }\r\n      }\r\n    });\r\n    canvas.onmousemove = (e: MouseEvent) => {\r\n      const rect = canvas.getBoundingClientRect();\r\n      const x = e.clientX - rect.left;\r\n      const y = e.clientY - rect.top;\r\n      for (let i in this.sprites) {\r\n        if (\r\n          x > this.sprites[i].x &&\r\n          this.sprites[i].x + this.sprites[i].width > x &&\r\n          this.sprites[i].y < y &&\r\n          this.sprites[i].y + this.sprites[i].height > y\r\n        ) {\r\n          if (this.sprites[i].onHover instanceof Function)\r\n            this.sprites[i].onHover(e);\r\n\r\n          break;\r\n        }\r\n      }\r\n    };\r\n    this.color = color;\r\n    this.height = height;\r\n    this.width = width;\r\n    canvas.width = this.width;\r\n    canvas.height = this.height;\r\n    let context = canvas.getContext(\"2d\");\r\n    this.context = context;\r\n    //Render process\r\n    let renderer = () => {\r\n      context.clearRect(0, 0, canvas.width, canvas.height);\r\n      if (this.color != undefined) {\r\n        context.fillStyle = this.color;\r\n        context.fillRect(0, 0, canvas.width, canvas.height);\r\n      }\r\n\r\n      for (let i in this.sprites) {\r\n        let currentSprite = this.sprites[i];\r\n        currentSprite.x = Math.trunc(currentSprite.x);\r\n        currentSprite.y = Math.trunc(currentSprite.y);\r\n        currentSprite.height = Math.trunc(currentSprite.height);\r\n        currentSprite.width = Math.trunc(currentSprite.width);\r\n        if (\r\n          currentSprite.renderer === undefined &&\r\n          currentSprite.renderer !== null\r\n        )\r\n          throw new Error(\"All Sprites must have renderers.\");\r\n        //if (currentSprite.renderer.getPrototype() !== Function)\r\n        //    throw new Error(\"Sprite renderers must be functions.\")\r\n        if (!currentSprite.hidden) currentSprite.renderer(context);\r\n      }\r\n      this.renderHandle = requestAnimationFrame(renderer);\r\n    };\r\n    this.renderHandle = requestAnimationFrame(renderer);\r\n  }\r\n  //get sprites() {\r\n  //    return clone(sprites)\r\n  //}\r\n  assign(sprite: IRenderable) {\r\n    this.sprites.push(sprite);\r\n    this.sprites = Object.values(this.sprites).sort(function(a, b) {\r\n      let x = a[\"layer\"];\r\n      let y = b[\"layer\"];\r\n      return x < y ? -1 : x > y ? 1 : 0;\r\n    });\r\n\r\n    sprites[sprite.id].stage = this;\r\n  }\r\n  delete() {\r\n    cancelAnimationFrame(this.renderHandle);\r\n    delete stages[this.id];\r\n  }\r\n}\r\n","import Sprite from \"../classes/sprite\";\r\n\r\nexport default class Circle extends Sprite {\r\n  radius: number;\r\n  outColor: string;\r\n  inColor: string;\r\n  lineWidth: number;\r\n  type: string;\r\n  constructor({\r\n    x,\r\n    y,\r\n    degree,\r\n    layer,\r\n    width,\r\n    height,\r\n    autoSize = true,\r\n    hidden,\r\n    nickname,\r\n    radius,\r\n    outColor,\r\n    inColor,\r\n    lineWidth\r\n  }) {\r\n    super({\r\n      x,\r\n      y,\r\n      degree,\r\n      layer,\r\n      width,\r\n      height,\r\n      autoSize,\r\n      hidden,\r\n      nickname\r\n    });\r\n    this.radius = radius || 0;\r\n    this.outColor = outColor || \"#ffffff\";\r\n    this.inColor = inColor || \"#ffffff\";\r\n    this.lineWidth = lineWidth || 1;\r\n    this.type = \"circle\";\r\n  }\r\n  renderer = (context: CanvasRenderingContext2D) => {\r\n    context.lineWidth = this.lineWidth;\r\n    this.width = this.radius * 2;\r\n    this.height = this.radius * 2;\r\n    context.beginPath();\r\n    context.arc(\r\n      this.x + this.radius,\r\n      this.y + this.radius,\r\n      this.radius,\r\n      Math.PI,\r\n      3 * Math.PI\r\n    );\r\n    context.strokeStyle = this.outColor;\r\n    context.fillStyle = this.inColor;\r\n    context.stroke();\r\n    context.fill();\r\n  };\r\n}\r\n","import Sprite from \"../classes/sprite\";\r\n\r\nexport default class Rect extends Sprite {\r\n  lineWidth: number;\r\n  inColor: string;\r\n  outColor: string;\r\n  constructor({\r\n    x,\r\n    y,\r\n    degree,\r\n    layer,\r\n    width,\r\n    height,\r\n    autoSize = true,\r\n    hidden,\r\n    nickname,\r\n    inColor,\r\n    outColor,\r\n    lineWidth\r\n  }) {\r\n    super({\r\n      x,\r\n      y,\r\n      degree,\r\n      layer,\r\n      width,\r\n      height,\r\n      autoSize,\r\n      hidden,\r\n      nickname\r\n    });\r\n    this.lineWidth = lineWidth || 1;\r\n    this.inColor = inColor || \"#000000\";\r\n    this.outColor = outColor || \"#ff0000\";\r\n    this.type = \"rectangle\";\r\n  }\r\n  renderer = (context: CanvasRenderingContext2D) => {\r\n    context.fillStyle = this.inColor;\r\n    context.strokeStyle = this.outColor;\r\n    context.lineWidth = this.lineWidth;\r\n    context.fillRect(this.x, this.y, this.width, this.height);\r\n  };\r\n}\r\n","import Sprite from \"../classes/sprite\";\r\nimport { imgNameSizes, imgNames, spriteImg } from \"../vars\";\r\nimport loadImg from \"../functions/loadImg\";\r\nimport drawRotatedImage from \"../functions/drawRotatedImage\";\r\nexport default class Img extends Sprite {\r\n  image: string;\r\n  constructor({\r\n    x,\r\n    y,\r\n    degree,\r\n    layer,\r\n    width,\r\n    height,\r\n    autoSize = true,\r\n    hidden,\r\n    nickname,\r\n    image\r\n  }) {\r\n    super({\r\n      x,\r\n      y,\r\n      degree,\r\n      layer,\r\n      width,\r\n      height,\r\n      autoSize,\r\n      hidden,\r\n      nickname\r\n    });\r\n    this.image = image || \"\";\r\n    this.type = \"image\";\r\n  }\r\n  renderer = (context: CanvasRenderingContext2D) => {\r\n    if (!(this.width && this.height)) {\r\n      let spriteImage = imgNameSizes[this.image];\r\n      if (!spriteImage) {\r\n        imgNameSizes[this.image] = new Image();\r\n        imgNameSizes[this.image].src = this.image;\r\n        spriteImage = imgNameSizes[this.image];\r\n      }\r\n      if (this.autoSize) {\r\n        if (!this.width) this.width = spriteImage.width;\r\n        if (!this.height) this.height = spriteImage.height;\r\n      } else {\r\n        if (!this.width) this.width = 1;\r\n        if (!this.height) this.height = 1;\r\n      }\r\n    }\r\n    let imageName = `${this.image} ${this.height}x${this.width}`;\r\n    if (!imgNames.includes(imageName))\r\n      loadImg(this.image, this.height, this.width);\r\n    else if (Object.keys(spriteImg).includes(imageName))\r\n      drawRotatedImage(context, spriteImg[imageName].image, this);\r\n  };\r\n}\r\n","\"use strict\";\r\n// This function will contain all our code\r\nconsole.log(\r\n  \"%cPowered by the ʐ̈uckor engine\\n%cMade by G lander\",\r\n  \"background: #005454; color: #BFF8F8;font-size:20px\",\r\n  \"color:#0000ff;background:#BFF8F8;font-size:13px\"\r\n);\r\nimport Sprite from \"./classes/sprite\";\r\nimport Stage from \"./classes/stage\";\r\nimport loadImg from \"./functions/loadImg\";\r\nimport Circle from \"./renders/circle\";\r\nimport Rect from \"./renders/rect\";\r\nimport Img from \"./renders/image\";\r\nSprite.Circle = Circle;\r\nSprite.Rect = Rect;\r\nSprite.Img = Img;\r\nimport { sprites, stages } from \"./vars\";\r\nexport { Sprite, Stage, sprites, stages, loadImg };\r\n"],"names":["Math","PI","rad","degrees","loadImg","img","height","width","imageName","imgNames","push","localImg","Image","src","onload","cvs","document","createElement","ctx","getContext","drawImage","spriteImg","image","toDataURL","replace","drawRotatedImage","context","sprite","x","y","degree","save","translate","rotate","restore","sprites","stages","imgNameSizes","_a","layer","nickname","_b","hidden","autoSize","id","Object","keys","x_1","parseInt","length","stage","Sprite","i","physics","solid","collisionWith","abs","deleted","calcHandle","cancelAnimationFrame","indexOf","_c","velocity","_d","acceleration","_e","velocityLoss","_f","accelerationLoss","_g","_h","maxVelocity","_j","gravityVelocity","_k","gravityAcceleration","_l","gravityDegree","_m","gravityMaxVelocity","_o","physicsCalc","sin","cos","_this","collisionWithSolid","requestAnimationFrame","maxSpeed","player","looking","togglePhysics","color","canvas","addEventListener","e","rect","getBoundingClientRect","clientX","left","clientY","top","console","log","onClick","Function","onmousemove","onHover","renderer","trunc","clearRect","fillStyle","fillRect","currentSprite","Error","renderHandle","Stage","values","sort","a","b","radius","outColor","inColor","lineWidth","_super","beginPath","arc","strokeStyle","stroke","fill","type","__extends","spriteImage","includes","Circle","Rect","Img"],"mappings":"4MAOoBA,IAAI,CAACC,WADDC,CAAAA,EAAIC,GAC1B,MAAOA,CAAAA,CAAO,EAAI,EAAU,GAAd,CACf,SCNuBC,CAAAA,EAAQC,EAAaC,EAAgBC,GAC3D,GAAIC,CAAAA,CAAS,CAAMH,CAAG,IAAH,CAAOC,CAAP,IAAA,CAAiBC,CAApC,CACAE,CAAQ,CAACC,IAAT,CAAcF,CAAd,EACA,GAAIG,CAAAA,CAAQ,CAAG,GAAIC,CAAAA,KAAnB,CACAD,CAAQ,CAACE,GAAT,CAAeR,EACfM,CAAQ,CAACG,MAAT,CAAkB,WAChB,GAAIC,CAAAA,CAAG,CAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAV,CACAF,CAAG,CAACR,KAAJ,CAAYA,EACZQ,CAAG,CAACT,MAAJ,CAAaA,EACb,GAAIY,CAAAA,CAAG,CAAGH,CAAG,CAACI,UAAJ,CAAe,IAAf,CAAV,CAEAD,CAAG,CAACE,SAAJ,CAAcT,CAAd,CAAwB,CAAxB,CAA2B,CAA3B,CAA8BJ,CAA9B,CAAqCD,CAArC,EACAe,CAAS,CAACb,CAAD,CAAT,CAAuB,GACvBa,CAAS,CAACb,CAAD,CAAT,CAAqBc,KAArB,CAA6B,GAAIV,CAAAA,MACjCS,CAAS,CAACb,CAAD,CAAT,CAAqBc,KAArB,CAA2BT,GAA3B,CAAiCE,CAAG,CACjCQ,SAD8B,CACpB,WADoB,EAE9BC,OAF8B,CAEtB,WAFsB,CAET,oBAFS,CAGlC,CACF,sICVuBC,CAAAA,EACtBC,EACAJ,EACAK,MAEIC,CAAAA,CAAC,CAAGD,CAAM,CAACC,CAAP,CAAWN,CAAK,CAACf,KAAN,CAAc,EAC7BsB,CAAC,CAAGF,CAAM,CAACE,CAAP,CAAWP,CAAK,CAAChB,MAAN,CAAe,EAC9BwB,CAAM,CAAGH,CAAM,CAACG,MAAP,CAAgB,GAG7BJ,CAAO,CAACK,IAAR,GAGAL,CAAO,CAACM,SAAR,CAAkBJ,CAAlB,CAAqBC,CAArB,EAIAH,CAAO,CAACO,MAAR,CAAe/B,CAAG,CAAC4B,CAAD,CAAlB,EAIAJ,CAAO,CAACN,SAAR,CAAkBE,CAAlB,CAAyB,EAAEA,CAAK,CAACf,KAAN,CAAc,CAAhB,CAAzB,CAA6C,EAAEe,CAAK,CAAChB,MAAN,CAAe,CAAjB,CAA7C,EAGAoB,CAAO,CAACQ,OAAR,EACD,ICnCGC,CAAAA,CAAO,CAAG,GACVC,CAAM,CAAG,GACTf,CAAS,CAAG,GACZZ,CAAQ,CAAG,GACX4B,CAAY,CAAG,gBC4BjB,UAAA,CAAYC,CAAZ,KACEV,CAAAA,MACAC,MACAC,WACAS,UACAC,aACAjC,UACAD,WACAmC,aACAC,WA/BF,MAAA,CAAI,EACJ,MAAA,CAAI,EACJ,WAAA,CAAS,GACT,UAAA,CAAQ,EAER,UAAA,CAAQ,EACR,WAAA,CAAS,EAET,aAAA,IACA,WAAA,IACA,YAAA,CAAoB,GAEpB,SAAA,CAAO,KAGP,YAAA,IAkBE,KAAKd,CAAL,CAASA,CAAC,EAAI,EACd,KAAKC,CAAL,CAASA,CAAC,EAAI,EACd,KAAKC,MAAL,CAAc,MAAAA,CAAM,CAAgB,EAAhB,CAAqBA,EACzC,KAAKU,QAAL,CAAgBA,CAAQ,EAAI,GAC5B,KAAKD,KAAL,CAAaA,CAAK,EAAI,EACtB,KAAKhC,KAAL,CAAaA,CAAK,EAAI,EACtB,KAAKD,MAAL,CAAcA,CAAM,EAAI,EACxB,KAAKqC,QAAL,WAAA,IACA,KAAKD,MAAL,CAAcA,CAAM,KACpB,KAAKE,EAAL,CAAW,WACT,GAA4B,EAAxB,EAAAC,MAAM,CAACC,IAAP,CAAYX,CAAZ,CAAJ,CACE,MAAO,EAAP,CAEF,IAAK,GAAIY,CAAAA,CAAT,GAAcF,CAAAA,MAAM,CAACC,IAAP,CAAYX,CAAZ,CAAd,CACE,GAAIY,CAAC,GAAK,SAAAZ,CAAO,CAACY,CAAD,CAAP,QAAuCZ,CAAO,CAACY,CAAD,CAAP,CAAWH,EAAvD,CAAL,CACE,MAAOI,CAAAA,QAAQ,CAACD,CAAD,CAAI,EAAJ,CAAf,CAGJ,MAAOF,CAAAA,MAAM,CAACC,IAAP,CAAYX,CAAZ,EAAqBc,MAC7B,CAVS,GAaV,KAAKC,KAAL,CAAa,KACbf,CAAO,CAAC,KAAKS,EAAN,CAAP,CAAmB,IACpB,CAsHH,MArHEO,CAAAA,WAAA,mBAAA,CAAA,WACE,IAAK,GAAIC,CAAAA,CAAT,GAAcjB,CAAAA,CAAd,CACE,GAAIA,CAAO,CAACiB,CAAD,CAAP,CAAWC,OAAX,CAAmBC,KAAnB,EAA4BnB,CAAO,CAACiB,CAAD,CAAP,CAAWR,EAAX,GAAkB,KAAKA,EAAvD,CAA2D,CACzD,GAAIjB,CAAAA,CAAM,CAAGQ,CAAO,CAACiB,CAAD,CAApB,CACA,GAAI,KAAKG,aAAL,CAAmB5B,CAAnB,CAAJ,CACE,MAAOA,CAAAA,CAEV,CAEH,MAAO,KACR,CA2GH,CA1GEwB,WAAA,cAAA,CAAA,SAAcxB,CAAd,QAGI3B,IAAI,CAACwD,IADP,MACE,GAAS,KAAK5B,CAAL,CAAS,KAAKrB,KAAL,CAAa,CAAtB,EAA2BoB,CAAM,CAACC,CAAP,CAAWD,CAAM,CAACpB,KAAP,CAAe,CAArD,CAAT,GACE,KAAKA,KAAL,CAAa,CAAb,CAAiBoB,CAAM,CAACpB,KAAP,CAAe,CADlC,EAEA,EAAS,KAAKsB,CAAL,CAAS,KAAKvB,MAAL,CAAc,CAAvB,EAA4BqB,CAAM,CAACE,CAAP,CAAWF,CAAM,CAACrB,MAAP,CAAgB,CAAvD,CAAT,GACE,KAAKA,MAAL,CAAc,CAAd,CAAkBqB,CAAM,CAACrB,MAAP,CAAgB,CAEvC,CAkGH,CAjGE6C,WAAA,CAAA,QAAA,EAAA,WACM,KAAKM,UACL,cAAKJ,OAAL,CAAaK,YACfC,oBAAoB,CAAC,KAAKN,OAAL,CAAaK,UAAd,EAEtB,MAAOvB,CAAAA,CAAO,CAAC,KAAKS,EAAN,EACV,KAAKM,OAAO,MAAO,MAAKA,KAAL,CAAWf,OAAX,CAAmB,KAAKe,KAAL,CAAWf,OAAX,CAAmByB,OAAnB,CAA2B,IAA3B,CAAnB,EACvB,KAAKH,OAAL,IACD,CAyFH,CAxFEN,WAAA,cAAA,CAAA,SAAcb,CAAd,aAAcG,kBACZoB,aAAAC,iBACAC,iBAAAC,iBACAC,iBAAAC,iBACAC,qBAAAC,iBACAC,WAAAvC,iBACAwC,gBAAAC,sBACAC,oBAAAC,iBACAC,wBAAAC,iBACAC,kBAAAC,kBACAC,uBAAAC,sBACAC,UAEA,KAAK3B,OAAL,CAAe,CACbS,QAAQ,EADK,CAEbE,YAAY,EAFC,CAGbE,YAAY,EAHC,CAIbE,gBAAgB,EAJH,CAKbtC,MAAM,EALO,CAMbyC,WAAW,EANE,CAObE,eAAe,EAPF,CAQbE,mBAAmB,EARN,CASbE,aAAa,EATA,CAUbE,kBAAkB,EAVL,CAWbzB,KAAK,WAAA,GAXQ,CAYbI,UAAU,CAAE,CAZC,EAcf,GAAMuB,CAAAA,CAAW,CAAG,iBAadjF,IAAI,CAACkF,MAPLlF,IAAI,CAACmF,IAJTC,CAAI,CAAC/B,OAAL,CAAaoB,eAAb,EAAgCW,CAAI,CAAC/B,OAAL,CAAasB,mBAAb,CAAmC,GAC9DS,CAAI,CAACC,kBAAL,GAKHD,CAAI,CAAC/B,OAAL,CAAaoB,eAAb,CAA+B,EAJ/BW,CAAI,CAACxD,CAAL,EACGwD,CAAI,CAAC/B,OAAL,CAAaoB,eAAb,CAA+B,EAAhC,CACA,EAASvE,CAAG,CAACkF,CAAI,CAAC/B,OAAL,CAAawB,aAAd,CAAZ,EAICO,CAAI,CAACC,kBAAL,GAKHD,CAAI,CAAC/B,OAAL,CAAaoB,eAAb,CAA+B,EAJ/BW,CAAI,CAACvD,CAAL,EACGuD,CAAI,CAAC/B,OAAL,CAAaoB,eAAb,CAA+B,EAAhC,CACA,EAASvE,CAAG,CAACkF,CAAI,CAAC/B,OAAL,CAAawB,aAAd,CAAZ,EAIAO,CAAI,CAAC/B,OAAL,CAAaoB,eAAb,CAA+BW,CAAI,CAAC/B,OAAL,CAAa0B,qBAC9CK,CAAI,CAAC/B,OAAL,CAAaoB,eAAb,CAA+BW,CAAI,CAAC/B,OAAL,CAAa0B,oBAG9CK,CAAI,CAAC/B,OAAL,CAAaS,QAAb,EAAyBsB,CAAI,CAAC/B,OAAL,CAAaW,YAAb,CAA4B,GACrDoB,CAAI,CAAC/B,OAAL,CAAaS,QAAb,EAC2D,CAAzD,CAAAsB,CAAI,CAAC/B,OAAL,CAAaS,QAAb,CAAwBsB,CAAI,CAAC/B,OAAL,CAAaa,YAAb,CAA4B,EAApD,CACIkB,CAAI,CAAC/B,OAAL,CAAaS,QADjB,CAEIsB,CAAI,CAAC/B,OAAL,CAAaa,YAAb,CAA4B,GAClCkB,CAAI,CAAC/B,OAAL,CAAaW,YAAb,EACmE,CAAjE,CAAAoB,CAAI,CAAC/B,OAAL,CAAaW,YAAb,CAA4BoB,CAAI,CAAC/B,OAAL,CAAae,gBAAb,CAAgC,EAA5D,CACIgB,CAAI,CAAC/B,OAAL,CAAaW,YADjB,CAEIoB,CAAI,CAAC/B,OAAL,CAAae,gBAAb,CAAgC,GACjCgB,CAAI,CAACC,kBAAL,GAIHD,CAAI,CAAC/B,OAAL,CAAaS,QAAb,CAAwB,EAHxBsB,CAAI,CAACxD,CAAL,EACGwD,CAAI,CAAC/B,OAAL,CAAaS,QAAb,CAAwB,EAAzB,CAA+B,EAAS5D,CAAG,CAACkF,CAAI,CAAC/B,OAAL,CAAavB,MAAd,CAAZ,EAI9BsD,CAAI,CAACC,kBAAL,GAIHD,CAAI,CAAC/B,OAAL,CAAaS,QAAb,CAAwB,EAHxBsB,CAAI,CAACvD,CAAL,EACGuD,CAAI,CAAC/B,OAAL,CAAaS,QAAb,CAAwB,EAAzB,CAA+B,EAAS5D,CAAG,CAACkF,CAAI,CAAC/B,OAAL,CAAavB,MAAd,CAAZ,EAI/BsD,CAAI,CAAC/B,OAAL,CAAaS,QAAb,CAAwBsB,CAAI,CAAC/B,OAAL,CAAakB,cACvCa,CAAI,CAAC/B,OAAL,CAAaS,QAAb,CAAwBsB,CAAI,CAAC/B,OAAL,CAAakB,aAEvCa,CAAI,CAAC/B,OAAL,CAAaK,UAAb,CAA0B4B,qBAAqB,CAACL,CAAD,CAChD,CA9CD,CA+CA,KAAK5B,OAAL,CAAaK,UAAb,CAA0B4B,qBAAqB,CAACL,CAAD,CAChD,CAaH,CAZE9B,WAAA,aAAA,CAAA,SAAab,CAAb,KAAeiD,CAAAA,aAAUvB,iBACvB,KAAKwB,MAAL,CAAc,CACZC,OAAO,GADK,CAEZzB,YAAY,EAFA,CAGZuB,QAAQ,EAHI,EAKd,KAAKG,aAAL,CAAmB,CACjBpC,KAAK,GADY,CAAnB,EAIA,KAAKD,OAAL,CAAaK,UAAb,CAA0B4B,qBAAqB,CAD5B,WAAQ,CACoB,CAChD,CACH,EAAC,iBC5KC,UAAA,CAAYhD,CAAZ,aAAYG,kBACVoB,WAAAvD,mBACAyD,UAAAxD,mBACA0D,UAAA0B,sBACAxB,WAAAyB,sBAEAA,CAAM,CAACtF,MAAP,CAAgBA,CAAM,EAAI,IAC1BsF,CAAM,CAACrF,KAAP,CAAeA,EACf,KAAKqC,EAAL,CAAW,WACT,GAA2B,EAAvB,EAAAC,MAAM,CAACC,IAAP,CAAYV,CAAZ,CAAJ,CACE,MAAO,EAAP,CAEF,IAAK,GAAIR,CAAAA,CAAT,GAAciB,CAAAA,MAAM,CAACC,IAAP,CAAYV,CAAZ,CAAd,CACE,GAAIR,CAAC,GAAK,SAAAQ,CAAM,CAACR,CAAD,CAAN,QAAsCQ,CAAM,CAACR,CAAD,CAAN,CAAUgB,EAArD,CAAL,CACE,MAAOI,CAAAA,QAAQ,CAACpB,CAAD,CAAI,EAAJ,CAAf,CAGJ,MAAOiB,CAAAA,MAAM,CAACC,IAAP,CAAYV,CAAZ,EAAoBa,MAC5B,CAVS,GAWVb,CAAM,CAAC,KAAKQ,EAAN,CAAN,CAAkB,KAClB,KAAKT,OAAL,CAAe,GACfyD,CAAM,CAACC,gBAAP,CAAwB,OAAxB,CAAiC,SAACC,CAAD,KACzBC,CAAAA,CAAI,CAAGH,CAAM,CAACI,qBAAP,GACPpE,CAAC,CAAGkE,CAAC,CAACG,OAAF,CAAYF,CAAI,CAACG,KACrBrE,CAAC,CAAGiE,CAAC,CAACK,OAAF,CAAYJ,CAAI,CAACK,IAE3B,IAAK,GAAIhD,CAAAA,CAAT,GADAiD,CAAAA,OAAO,CAACC,GAAR,CAAY,MAAQ1E,CAAR,CAAY,MAAZ,CAAqBC,CAAjC,CACA,CAAcuD,CAAI,CAACjD,OAAnB,CACE,GACEP,CAAC,CAAGwD,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgBxB,CAApB,EACAwD,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgBxB,CAAhB,CAAoBwD,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgB7C,KAApC,CAA4CqB,CAD5C,EAEAwD,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgBvB,CAAhB,CAAoBA,CAFpB,EAGAuD,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgBvB,CAAhB,CAAoBuD,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgB9C,MAApC,CAA6CuB,CAJ/C,CAKE,CACIuD,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgBmD,OAAhB,WAAmCC,CAAAA,QADvC,EAEEpB,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgBmD,OAAhB,CAAwBT,CAAxB,CAFF,CAIA,KACD,CAEJ,CAlBD,EAmBAF,CAAM,CAACa,WAAP,CAAqB,SAACX,CAAD,KACbC,CAAAA,CAAI,CAAGH,CAAM,CAACI,qBAAP,GACPpE,CAAC,CAAGkE,CAAC,CAACG,OAAF,CAAYF,CAAI,CAACG,KACrBrE,CAAC,CAAGiE,CAAC,CAACK,OAAF,CAAYJ,CAAI,CAACK,IAC3B,IAAK,GAAIhD,CAAAA,CAAT,GAAcgC,CAAAA,CAAI,CAACjD,OAAnB,CACE,GACEP,CAAC,CAAGwD,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgBxB,CAApB,EACAwD,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgBxB,CAAhB,CAAoBwD,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgB7C,KAApC,CAA4CqB,CAD5C,EAEAwD,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgBvB,CAAhB,CAAoBA,CAFpB,EAGAuD,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgBvB,CAAhB,CAAoBuD,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgB9C,MAApC,CAA6CuB,CAJ/C,CAKE,CACIuD,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgBsD,OAAhB,WAAmCF,CAAAA,QADvC,EAEEpB,CAAI,CAACjD,OAAL,CAAaiB,CAAb,EAAgBsD,OAAhB,CAAwBZ,CAAxB,CAFF,CAIA,KACD,CAEJ,EACD,KAAKH,KAAL,CAAaA,EACb,KAAKrF,MAAL,CAAcA,EACd,KAAKC,KAAL,CAAaA,EACbqF,CAAM,CAACrF,KAAP,CAAe,KAAKA,MACpBqF,CAAM,CAACtF,MAAP,CAAgB,KAAKA,OACrB,GAAIoB,CAAAA,CAAO,CAAGkE,CAAM,CAACzE,UAAP,CAAkB,IAAlB,CAAd,CACA,KAAKO,OAAL,CAAeA,EAEf,GAAIiF,CAAAA,CAAQ,CAAG,iBASO3G,IAAI,CAAC4G,MAFzB,IAAK,GAAIxD,CAAAA,CAAT,GANA1B,CAAAA,CAAO,CAACmF,SAAR,CAAkB,CAAlB,CAAqB,CAArB,CAAwBjB,CAAM,CAACrF,KAA/B,CAAsCqF,CAAM,CAACtF,MAA7C,CAMA,CALI,MAAA8E,CAAI,CAACO,KAKT,GAJEjE,CAAO,CAACoF,SAAR,CAAoB1B,CAAI,CAACO,KAI3B,CAHEjE,CAAO,CAACqF,QAAR,CAAiB,CAAjB,CAAoB,CAApB,CAAuBnB,CAAM,CAACrF,KAA9B,CAAqCqF,CAAM,CAACtF,MAA5C,CAGF,EAAc8E,CAAI,CAACjD,OAAnB,CAA4B,CAC1B,GAAI6E,CAAAA,CAAa,CAAG5B,CAAI,CAACjD,OAAL,CAAaiB,CAAb,CAApB,CAKA,GAJA4D,CAAa,CAACpF,CAAd,CAAkB,EAAWoF,CAAa,CAACpF,CAAzB,CAIlB,CAHAoF,CAAa,CAACnF,CAAd,CAAkB,EAAWmF,CAAa,CAACnF,CAAzB,CAGlB,CAFAmF,CAAa,CAAC1G,MAAd,CAAuB,EAAW0G,CAAa,CAAC1G,MAAzB,CAEvB,CADA0G,CAAa,CAACzG,KAAd,CAAsB,EAAWyG,CAAa,CAACzG,KAAzB,CACtB,CACE,SAAAyG,CAAa,CAACL,QAAd,EAC2B,IAA3B,GAAAK,CAAa,CAACL,QAFhB,CAIE,KAAM,IAAIM,CAAAA,KAAJ,CAAU,kCAAV,CAAN,CAGGD,CAAa,CAACtE,MAbO,EAaCsE,CAAa,CAACL,QAAd,CAAuBjF,CAAvB,CAC5B,CACD0D,CAAI,CAAC8B,YAAL,CAAoB5B,qBAAqB,CAACqB,CAAD,CAC1C,CAvBD,CAwBA,KAAKO,YAAL,CAAoB5B,qBAAqB,CAACqB,CAAD,CAC1C,CAkBH,MAdEQ,CAAAA,WAAA,OAAA,CAAA,SAAOxF,CAAP,EACE,KAAKQ,OAAL,CAAazB,IAAb,CAAkBiB,CAAlB,EACA,KAAKQ,OAAL,CAAeU,MAAM,CAACuE,MAAP,CAAc,KAAKjF,OAAnB,EAA4BkF,IAA5B,CAAiC,SAASC,CAAT,CAAYC,CAAZ,KAC1C3F,CAAAA,CAAC,CAAG0F,CAAC,OACLzF,CAAC,CAAG0F,CAAC,OACT,MAAO3F,CAAAA,CAAC,CAAGC,CAAJ,CAAQ,CAAC,CAAT,CAAaD,CAAC,CAAGC,CAAJ,CAAQ,CAAR,CAAY,CACjC,CAJc,EAMfM,CAAO,CAACR,CAAM,CAACiB,EAAR,CAAP,CAAmBM,KAAnB,CAA2B,IAC5B,CAKH,CAJEiE,WAAA,CAAA,QAAA,EAAA,WACExD,oBAAoB,CAAC,KAAKuD,YAAN,EACpB,MAAO9E,CAAAA,CAAM,CAAC,KAAKQ,EAAN,CACd,CACH,EAAC,uMClHC,UAAA,CAAYN,CAAZ,KACEV,CAAAA,MACAC,MACAC,WACAS,UACAhC,UACAD,WACAmC,aACAC,WACAF,aACAgF,WACAC,aACAC,YACAC,gBAEAC,MAAA,KAAA,CAAM,CACJhG,CAAC,EADG,CAEJC,CAAC,EAFG,CAGJC,MAAM,EAHF,CAIJS,KAAK,EAJD,CAKJhC,KAAK,EALD,CAMJD,MAAM,EANF,CAOJqC,QAAQ,WAAA,GAPJ,CAQJD,MAAM,EARF,CASJF,QAAQ,EATJ,CAAN,cAiBF4C,CAAAA,UAAA,CAAW,SAAC1D,CAAD,EACTA,CAAO,CAACiG,SAAR,CAAoBvC,CAAI,CAACuC,UACzBvC,CAAI,CAAC7E,KAAL,CAA2B,CAAd,CAAA6E,CAAI,CAACoC,OAClBpC,CAAI,CAAC9E,MAAL,CAA4B,CAAd,CAAA8E,CAAI,CAACoC,OACnB9F,CAAO,CAACmG,SAAR,GACAnG,CAAO,CAACoG,GAAR,CACE1C,CAAI,CAACxD,CAAL,CAASwD,CAAI,CAACoC,MADhB,CAEEpC,CAAI,CAACvD,CAAL,CAASuD,CAAI,CAACoC,MAFhB,CAGEpC,CAAI,CAACoC,MAHP,CAIExH,IAAI,CAACC,EAJP,CAKE,GALF,EAOAyB,CAAO,CAACqG,WAAR,CAAsB3C,CAAI,CAACqC,SAC3B/F,CAAO,CAACoF,SAAR,CAAoB1B,CAAI,CAACsC,QACzBhG,CAAO,CAACsG,MAAR,GACAtG,CAAO,CAACuG,IAAR,EACD,EAtBC7C,CAAI,CAACoC,MAAL,CAAcA,CAAM,EAAI,EACxBpC,CAAI,CAACqC,QAAL,CAAgBA,CAAQ,EAAI,UAC5BrC,CAAI,CAACsC,OAAL,CAAeA,CAAO,EAAI,UAC1BtC,CAAI,CAACuC,SAAL,CAAiBA,CAAS,EAAI,EAC9BvC,CAAI,CAAC8C,IAAL,CAAY,UACb,CAkBH,MAvDoCC,CAAAA,MAuDpC,EAvDA,EAAoChF,iBCIlC,UAAA,CAAYb,CAAZ,KACEV,CAAAA,MACAC,MACAC,WACAS,UACAhC,UACAD,WACAmC,aACAC,WACAF,aACAkF,YACAD,aACAE,gBAEAC,MAAA,KAAA,CAAM,CACJhG,CAAC,EADG,CAEJC,CAAC,EAFG,CAGJC,MAAM,EAHF,CAIJS,KAAK,EAJD,CAKJhC,KAAK,EALD,CAMJD,MAAM,EANF,CAOJqC,QAAQ,WAAA,GAPJ,CAQJD,MAAM,EARF,CASJF,QAAQ,EATJ,CAAN,cAgBF4C,CAAAA,UAAA,CAAW,SAAC1D,CAAD,EACTA,CAAO,CAACoF,SAAR,CAAoB1B,CAAI,CAACsC,QACzBhG,CAAO,CAACqG,WAAR,CAAsB3C,CAAI,CAACqC,SAC3B/F,CAAO,CAACiG,SAAR,CAAoBvC,CAAI,CAACuC,UACzBjG,CAAO,CAACqF,QAAR,CAAiB3B,CAAI,CAACxD,CAAtB,CAAyBwD,CAAI,CAACvD,CAA9B,CAAiCuD,CAAI,CAAC7E,KAAtC,CAA6C6E,CAAI,CAAC9E,MAAlD,CACD,EAVC8E,CAAI,CAACuC,SAAL,CAAiBA,CAAS,EAAI,EAC9BvC,CAAI,CAACsC,OAAL,CAAeA,CAAO,EAAI,UAC1BtC,CAAI,CAACqC,QAAL,CAAgBA,CAAQ,EAAI,UAC5BrC,CAAI,CAAC8C,IAAL,CAAY,aACb,CAOH,MAxCkCC,CAAAA,MAwClC,EAxCA,EAAkChF,iBCIhC,UAAA,CAAYb,CAAZ,KACEV,CAAAA,MACAC,MACAC,WACAS,UACAhC,UACAD,WACAmC,aACAC,WACAF,aACAlB,YAEAsG,MAAA,KAAA,CAAM,CACJhG,CAAC,EADG,CAEJC,CAAC,EAFG,CAGJC,MAAM,EAHF,CAIJS,KAAK,EAJD,CAKJhC,KAAK,EALD,CAMJD,MAAM,EANF,CAOJqC,QAAQ,WAAA,GAPJ,CAQJD,MAAM,EARF,CASJF,QAAQ,EATJ,CAAN,cAcF4C,CAAAA,UAAA,CAAW,SAAC1D,CAAD,EACT,GAAI,EAAE0D,CAAI,CAAC7E,KAAL,EAAc6E,CAAI,CAAC9E,MAArB,CAAJ,CAAkC,CAChC,GAAI8H,CAAAA,CAAW,CAAG/F,CAAY,CAAC+C,CAAI,CAAC9D,KAAN,CAA9B,CACK8G,CAF2B,GAG9B/F,CAAY,CAAC+C,CAAI,CAAC9D,KAAN,CAAZ,CAA2B,GAAIV,CAAAA,KAHD,CAI9ByB,CAAY,CAAC+C,CAAI,CAAC9D,KAAN,CAAZ,CAAyBT,GAAzB,CAA+BuE,CAAI,CAAC9D,KAJN,CAK9B8G,CAAW,CAAG/F,CAAY,CAAC+C,CAAI,CAAC9D,KAAN,CALI,EAO5B8D,CAAI,CAACzC,QAPuB,EAQ1B,CAACyC,CAAI,CAAC7E,KARoB,GAQb6E,CAAI,CAAC7E,KAAL,CAAa6H,CAAW,CAAC7H,KARZ,EAS1B,CAAC6E,CAAI,CAAC9E,MAToB,GASZ8E,CAAI,CAAC9E,MAAL,CAAc8H,CAAW,CAAC9H,MATd,IAW1B,CAAC8E,CAAI,CAAC7E,KAXoB,GAWb6E,CAAI,CAAC7E,KAAL,CAAa,CAXA,EAY1B,CAAC6E,CAAI,CAAC9E,MAZoB,GAYZ8E,CAAI,CAAC9E,MAAL,CAAc,CAZF,EAcjC,CACD,GAAIE,CAAAA,CAAS,CAAM4E,CAAI,CAAC9D,KAAL,IAAA,CAAc8D,CAAI,CAAC9E,MAAnB,IAAA,CAA6B8E,CAAI,CAAC7E,KAArD,CACKE,CAAQ,CAAC4H,QAAT,CAAkB7H,CAAlB,EAEIqC,MAAM,CAACC,IAAP,CAAYzB,CAAZ,EAAuBgH,QAAvB,CAAgC7H,CAAhC,GACPiB,CAAgB,CAACC,CAAD,CAAUL,CAAS,CAACb,CAAD,CAAT,CAAqBc,KAA/B,CAAsC8D,CAAtC,EAFhBhF,CAAO,CAACgF,CAAI,CAAC9D,KAAN,CAAa8D,CAAI,CAAC9E,MAAlB,CAA0B8E,CAAI,CAAC7E,KAA/B,CAGV,EAxBC6E,CAAI,CAAC9D,KAAL,CAAaA,CAAK,EAAI,GACtB8D,CAAI,CAAC8C,IAAL,CAAY,SACb,CAuBH,MAlDiCC,CAAAA,MAkDjC,EAlDA,EAAiChF,GCFjCkD,OAAO,CAACC,GAAR,CACE,+DADF,CAEE,oDAFF,CAGE,iDAHF,EAWAnD,CAAM,CAACmF,MAAP,CAAgBA,EAChBnF,CAAM,CAACoF,IAAP,CAAcA,EACdpF,CAAM,CAACqF,GAAP,CAAaA"}